"use client";
import React, { useState, useEffect, useCallback } from "react";
import {
  Layout,
  Menu,
  Typography,
  Card,
  Row,
  Col,
  Button,
  Space,
  Affix,
  Tag,
  Form,
  Input,
  message,
  notification,
  Alert,
  Drawer,
} from "antd";
import {
  SiJavascript,
  SiTypescript,
  SiTailwindcss,
  SiAntdesign,
  SiFigma,
  SiPostgresql,
  SiTensorflow,
  SiCplusplus,
  SiReact,
  SiNodedotjs,
  SiPython,
  SiMongodb,
  SiMysql,
} from "react-icons/si";
import { FaGithub, FaLinkedin } from "react-icons/fa";
import { MenuOutlined, CloseOutlined } from "@ant-design/icons";
import Image from "next/image";
import axios from "axios";
// Note: We assume Ant Design and Tailwind classes are available here.

const { Header, Content, Footer } = Layout;
const { Title, Paragraph, Text } = Typography;

const skillIcons = {
  React: <SiReact className="text-blue-500" />,
  JavaScript: <SiJavascript className="text-yellow-400" />,
  "C++": <SiCplusplus className="text-gray-700" />,
  Python: <SiPython className="text-green-500" />,
  "Machine Learning": <SiTensorflow className="text-orange-500" />,
  "Node.js": <SiNodedotjs className="text-green-600" />,
  TypeScript: <SiTypescript className="text-blue-600" />,
  "Tailwind CSS": <SiTailwindcss className="text-cyan-400" />,
  "Ant Design": <SiAntdesign className="text-red-500" />,
  Figma: <SiFigma className="text-pink-500" />,
  PostgreSQL: <SiPostgresql className="text-blue-800" />,
  MongoDB: <SiMongodb className="text-green-700" />,
  MySql: <SiMysql className="text-blue-800" />, // Using PostgreSQL icon as a placeholde
  "Agentic Ai": "🤖",
};
// --- Data Structure ---
const portfolioData = {
  name: "Debshankar Dey",
  headshotUrl: "headshot.jpg", // Placeholder for headshot image URL
  resumeUrl: "resume.pdf", // Placeholder for resume download link
  about:
    "I am a recent graduate and currently working as a Software Development Engineer I, with under a year of professional experience. I am passionate about building web applications and exploring innovative technologies, particularly in Artificial Intelligence. I enjoy learning new frameworks, writing clean and maintainable code, and integrating AI solutions to create smarter, more efficient applications. My goal is to grow as a Full Stack Developer while contributing to impactful projects that combine web development and AI.",

  // --- NEW EXPERIENCE DATA ---
  experience: [
    {
      company: "COZEVA",
      title: "SDE 1 - Full Stack Developer",
      period: "Aug,2025 - Present",
      imageUrl: "/cozeva.png", // Placeholder for company logo URL
      responsibilities: [
        "Engineered solutions to address complex problems related to health-care interoperability.",
        "Actively involved in projects encompassing multiple domains mainly on health-care interoperability, agentic ai.",
        "Solely led the end-to-end development of a data-intensive platform, leveraging React, Node.js, MongoDB, and MySQL for full-stack functionality.",
        "Optimized complex SQL/NoSQL queries for this system, ensuring efficient data ingestion and processing of high-volume datasets.",
      ],
    },
  ],
  // --- END EXPERIENCE DATA ---

  projects: [
    {
      key: "p1",
      title: "Real-Time Violence Detection",
      description:
        "A Real Time violence detection application that uses real time video feed from cctvs to predict violence actions and notify the authorities for prompt action.",
      technologies: [
        "Python",
        "Tensorflow",
        "Deep Learning",
        "Video & Image Processing",
      ],
      link: "https://github.com/Kazuto16K/VioLENS",
    },
    {
      key: "p2",
      title: "AI-powered Interview Trainer",
      description:
        "An AI powered application that uses Three js and socket.io to provider a real time interview environment and leverages facial and vocal data generated by deep learning models and NLP to generate interview feedback using Ollama and Gemini AI.",
      technologies: [
        "AI",
        "Deep Learning",
        "React",
        "ThreeJS",
        "Socket.io",
        "Django",
      ],
      link: "https://github.com/AI-Powered-Interview-Trainer/ai-interview-trainer",
    },
    {
      key: "p3",
      title: "Travel Booking Website",
      description:
        "An all-in-one travel gateway that lets you seamlessly book flights, find the perfect hotel, and explore curated travel blogs — all in one place.",
      technologies: [
        "Java Script",
        "HTML",
        "CSS",
        "EJS",
        "MongoDB",
        "Node.js",
        "Express.js",
        "Nodemailer",
        "Api Integration",
        "Stripe",
        "Authentication",
        "JWT",
      ],
      link: "https://github.com/debshankar037/Travel-Booking-Website",
    },
  ],
  education: [
    {
      institution: "Heritage Institute of Technology, Kolkata",
      degree: "B.Tech",
      period: "2021 - 2025",
      details: "Specialization in Computer Science and Engineering.",
      grade: "CGPA: 9.72/10",
      imageUrl: "/heritage.png", // Placeholder for institution logo URL
    },
  ],
  achievements: [
    {
      achivement:
        "Achieved the best paper award at the 2nd International Conference on Artificial Intelligence and Sustainable Computing (2025) organized Department of Information Technology,B. P. Poddar Institute of Management & Technology, Kolkata & A. K. Choudhury School of Information Technology,University of Calcutta.",
      imageUrl: "/aisc.png",
      url: "https://aisc.bppimt.ac.in/",
    },
  ],
  contact: {
    email: "debshankar310@gmail.com",
    phone: "(555) 123-4567",
    linkedin: "www.linkedin.com/in/debshankar-dey-542b99224/",
    github: "github.com/debshankar037",
  },
  skills: [
    "React",
    "JavaScript",
    "C++",
    "Python",
    "Machine Learning",
    "Node.js",
    "Tailwind CSS",
    "Ant Design",
    "MongoDB",
    "MySql",
    "Agentic Ai",
  ],
};

// --- Typing Animation Component ---
const TypewriterEffect = ({
  phrases,
  speed = 100,
  delay = 1500,
  deleteSpeed = 50,
}) => {
  const [text, setText] = useState("");
  const [phraseIndex, setPhraseIndex] = useState(0);
  const [isDeleting, setIsDeleting] = useState(false);

  useEffect(() => {
    const currentPhrase = phrases[phraseIndex % phrases.length];
    let timeoutId;

    const handleType = () => {
      if (!isDeleting) {
        // Typing forward
        setText((prev) => currentPhrase.substring(0, prev.length + 1));

        if (text === currentPhrase) {
          // Finished typing, start pausing
          setIsDeleting(true);
          timeoutId = setTimeout(handleType, delay);
        } else {
          // Continue typing
          timeoutId = setTimeout(handleType, speed);
        }
      } else {
        // Deleting backward
        setText((prev) => currentPhrase.substring(0, prev.length - 1));

        if (text === "") {
          // Finished deleting, move to next phrase
          setIsDeleting(false);
          setPhraseIndex((prev) => prev + 1);
          timeoutId = setTimeout(handleType, 500); // Short pause before next phrase starts
        } else {
          // Continue deleting
          timeoutId = setTimeout(handleType, deleteSpeed);
        }
      }
    };

    timeoutId = setTimeout(handleType, isDeleting ? deleteSpeed : speed);

    // Cleanup function
    return () => clearTimeout(timeoutId);
  }, [text, isDeleting, phraseIndex, phrases, speed, delay, deleteSpeed]);

  return (
    // min-h ensures no layout shift, the span element handles the blinking cursor
    <Title
      level={3}
      className="!text-xl md:!text-2xl !mt-2 !text-blue-600 dark:!text-blue-400 min-h-[30px] md:min-h-[36px] overflow-hidden pr-1"
    >
      {text}
      {/* Blinking Cursor element. The 'animate-cursor-blink' class is defined in the <style> block below. */}
      <span className="inline-block align-bottom border-r-4 border-solid border-blue-600 dark:border-blue-400 opacity-100 animate-cursor-blink">
        &nbsp;
      </span>
    </Title>
  );
};

// --- Custom Components ---
// Removed the incorrectly defined handleShowingAlert function from here.

// MODIFIED: HeroSection now accepts onDownloadClick as a prop
const HeroSection = ({ scrollToSection, onDownloadClick }) => {
  const handleDownloadResume = () => {
    console.log("download resume clicked");
    onDownloadClick("Resume Getting Downloaded"); // Call the function passed from the parent
    const link = document.createElement("a");
    link.href = "/resume.pdf";
    link.download = "resume.pdf";
    link.click();
    console.log(
      `Attempting to download resume from: ${portfolioData.resumeUrl}`
    );
  };

  const typingPhrases = [
    "Full Stack Developer & AI Enthusiast",
    "Building scalable web applications",
    "Integrating Computer Science with Healthcare Interoperability",
    "Ready for the next challenge!",
  ];

  return (
    <div
      id="Home"
      className="min-h-[80vh] flex items-center justify-center text-center bg-gray-50 dark:bg-gray-900 transition-colors duration-300"
    >
      <div className="max-w-4xl p-6 md:p-12">
        <div className="flex justify-center mb-6">
          <img
            alt="Alex Johnson Headshot"
            src={portfolioData.headshotUrl}
            className="w-32 h-32 md:w-40 md:h-40 rounded-full border-4 border-blue-500 shadow-xl object-cover transition-all duration-500 transform hover:scale-105"
            onError={(e) => {
              e.target.onerror = null;
              e.target.src =
                "https://placehold.co/400x400/cccccc/333333?text=AJ";
            }}
          />
        </div>
        <Title
          level={1}
          className="!text-5xl md:!text-7xl !font-extrabold !text-gray-900 dark:!text-white"
        >
          {portfolioData.name}
        </Title>

        {/* Typing Animation */}
        <TypewriterEffect phrases={typingPhrases} />

        <Paragraph className="!text-lg md:!text-xl !mt-6 !text-gray-600 dark:!text-gray-300">
          Bridging beautiful design and robust code.
        </Paragraph>

        {/* Consolidated Buttons */}
        <Space size={[16, 16]} wrap className="mt-8 justify-center">
          <Button
            type="default"
            size="large"
            className="border-blue-600 !text-blue-600 hover:!text-blue-700 hover:!border-blue-700 rounded-lg transition-all duration-300"
            onClick={() => scrollToSection("Contact")}
          >
            Get In Touch
          </Button>
          <Button
            type="dashed"
            size="large"
            className="!text-blue-600 dark:!text-blue-400 !border-blue-600 dark:!border-blue-400 hover:!bg-blue-50 dark:hover:!bg-blue-900/30 rounded-lg h-10 font-semibold transition-all duration-300 hover:scale-[1.05]"
            onClick={handleDownloadResume}
          >
            ⬇️ Download Resume
          </Button>
        </Space>
      </div>
    </div>
  );
};

const AboutSection = () => (
  <div
    id="About"
    className="p-6 md:p-12 lg:p-20 bg-white dark:bg-gray-800 transition-colors duration-300"
  >
    <div className="max-w-6xl mx-auto">
      {/* Heading */}
      <Title
        level={2}
        className="!text-4xl !font-bold !text-center !mb-12 !text-gray-900 dark:!text-white"
      >
        About Me
      </Title>

      <Row gutter={[32, 32]} justify="center" align="middle">
        <Col xs={24} lg={16}>
          {/* About Text */}
          <Paragraph className="!text-lg leading-relaxed !text-gray-700 dark:!text-gray-300">
            {portfolioData.about}
          </Paragraph>

          {/* Skills Section */}
          <div className="mt-8">
            <Title
              level={4}
              className="!text-2xl !font-semibold !mb-4 !text-gray-900 dark:!text-white"
            >
              My Core Skills
            </Title>

            <Space size={[8, 16]} wrap>
              {portfolioData.skills.map((skill) => (
                <Tag
                  key={skill}
                  color="blue"
                  style={{
                    borderRadius: "0.75rem",
                    padding: "0.5rem 1rem",
                    fontSize: "1rem",
                  }}
                >
                  <span className="inline-flex items-center gap-1">
                    {skillIcons[skill] || "🛠️"}
                    {skill}
                  </span>
                </Tag>
              ))}
            </Space>
          </div>
        </Col>
      </Row>
    </div>
  </div>
);

// --- NEW EXPERIENCE SECTION ---
const ExperienceSection = () => (
  <div
    id="Experience"
    className="p-6 md:p-12 lg:p-20 bg-gray-50 dark:bg-gray-900 transition-colors duration-300"
  >
    <div className="max-w-6xl mx-auto">
      {/* Updated Heading for Dark Mode */}
      <Title
        level={2}
        className="!text-4xl !font-bold !text-center !mb-12 !text-gray-900 dark:!text-white"
      >
        Professional Experience
      </Title>
      <Row gutter={[32, 32]} justify="center">
        {portfolioData.experience.map((job, index) => (
          <Col key={index} xs={24} lg={20}>
            <Card
              className="rounded-xl shadow-2xl bg-transparent border border-gray-700 transition-all duration-300 mb-8 hover:shadow-blue-500/50 hover:scale-[1.01]"
              style={{
                backgroundColor: "var(--ant-bg-container)",
              }}
            >
              <div className="flex justify-between items-start flex-wrap mb-5">
                {/* Left section: logo + title + company */}
                <div className="flex items-center gap-4">
                  {/* Company Logo */}
                  <div className="w-12 h-12 rounded-full overflow-hidden flex-shrink-0">
                    <Image
                      src={job.imageUrl || "/placeholder-logo.png"}
                      alt={`${job.company} logo`}
                      width={48}
                      height={48}
                      className="object-cover"
                      style={{ cursor: "pointer" }}
                      onClick={() => {
                        window.open("https://corp.cozeva.com/", "_blank");
                      }}
                    />
                  </div>

                  {/* Title + Company Name */}
                  <div>
                    <Title
                      level={3}
                      className="!m-0"
                      style={{
                        color: "#fff",
                        marginBottom: "0.2rem",
                        fontWeight: "700",
                        fontFamily: "Inter, sans-serif",
                      }}
                    >
                      {job.title}
                    </Title>
                    <Text
                      style={{
                        color: "#9ca3af",
                        fontSize: "1.05rem",
                        fontWeight: "500",
                        fontFamily: "Inter, sans-serif",
                      }}
                    >
                      {job.company}
                    </Text>
                  </div>
                </div>

                {/* Period */}
                <Text
                  type="secondary"
                  className="!text-base !text-gray-400 mt-1"
                >
                  {job.period}
                </Text>
              </div>

              {/* Responsibilities */}
              <ul className="list-disc pl-5 space-y-2 !text-gray-700 dark:!text-gray-300">
                {job.responsibilities.map((res, i) => (
                  <li key={i}>{res}</li>
                ))}
              </ul>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
  </div>
);
// --- END NEW EXPERIENCE SECTION ---

const EducationSection = () => (
  <div
    id="Education"
    className="p-6 md:p-12 lg:p-20 bg-gray-50 dark:bg-gray-800 transition-colors duration-300"
  >
    <div className="max-w-6xl mx-auto">
      {/* Updated Heading for Dark Mode */}
      <Title
        level={2}
        className="!text-4xl !font-bold !text-center !mb-12 !text-gray-900 dark:!text-white"
      >
        Education
      </Title>
      <Row gutter={[32, 32]} justify="center">
        {portfolioData.education.map((edu, index) => (
          <Col key={index} xs={24} md={20}>
            <Card
              className="shadow-2xl dark:border-gray-700 transition-all duration-300 mb-8 hover:shadow-blue-500/50 hover:scale-[1.01] rounded-xl"
              style={{
                backgroundColor: "var(--ant-bg-container)",
              }}
            >
              {/* Institution Logo + Name */}
              <div className="flex items-center gap-4 mb-4">
                <div className="w-12 h-12 rounded-full overflow-hidden flex-shrink-0">
                  <Image
                    src={edu.imageUrl || "/placeholder-logo.png"} // image in public folder
                    alt={`${edu.institution} logo`}
                    width={48}
                    height={48}
                    className="object-cover"
                    style={{ cursor: "pointer" }}
                    onClick={() => {
                      window.open("https://heritageit.edu.in/", "_blank");
                    }}
                  />
                </div>

                <Title
                  level={3}
                  className="!text-xl !mb-0 !text-blue-600 dark:!text-blue-400"
                >
                  {edu.institution}
                </Title>
              </div>

              {/* Degree */}
              <Paragraph className="!text-lg !font-semibold !text-gray-900 dark:!text-white">
                {edu.degree}
              </Paragraph>

              {/* Grade / CGPA */}
              {edu.grade && (
                <Text className="block mb-1 !text-blue-500 dark:!text-blue-400 !font-medium">
                  Grade: {edu.grade}
                </Text>
              )}

              {/* Period */}
              <Text
                type="secondary"
                className="block mb-2 !text-gray-500 dark:!text-gray-400"
              >
                {edu.period}
              </Text>

              {/* Description */}
              <Paragraph className="!text-base !text-gray-700 dark:!text-gray-300">
                {edu.details}
              </Paragraph>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
  </div>
);

const AchievementsSection = () => (
  <div
    id="Achievements"
    className="p-6 md:p-12 lg:p-20 bg-gray-50 dark:bg-gray-900 transition-colors duration-300"
  >
    <div className="max-w-6xl mx-auto">
      {/* Updated Heading for Dark Mode */}
      <Title
        level={2}
        className="!text-4xl !font-bold !text-center !mb-12 !text-gray-900 dark:!text-white"
      >
        Awards & Recognition
      </Title>
      <Row gutter={[32, 32]} justify="center">
        {portfolioData.achievements.map((achievement, index) => (
          <Col key={index} xs={24} md={12} lg={20}>
            <Card
              className="rounded-xl h-full shadow-lg dark:bg-gray-800 dark:border-gray-700 transition-all duration-300 hover:bg-blue-50 dark:hover:bg-blue-900/30"
              style={{ backgroundColor: "var(--ant-bg-container)" }}
            >
              <Space
                direction="horizontal"
                className="flex items-center gap-4"
                align="start"
              >
                {/* Image Placeholder (optional) */}
                {achievement.imageUrl && (
                  <div className="w-14 h-14 rounded-lg overflow-hidden flex-shrink-0">
                    <Image
                      src={achievement.imageUrl}
                      alt={`${achievement.achivement} logo`}
                      width={70}
                      height={56}
                      className="object-cover"
                      style={{ cursor: "pointer" }}
                      onClick={() => {
                        window.open(achievement.url, "_blank");
                      }}
                    />
                  </div>
                )}

                {/* Achievement Text */}
                <Paragraph className="!text-lg !font-medium !text-gray-800 dark:!text-gray-200">
                  {achievement.achivement}
                </Paragraph>
              </Space>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
  </div>
);

const ProjectsSection = () => (
  <div
    id="Projects"
    className="p-6 md:p-12 lg:p-20 bg-white dark:bg-gray-800 transition-colors duration-300"
  >
    <div className="max-w-6xl mx-auto">
      {/* Updated Heading for Dark Mode */}
      <Title
        level={2}
        className="!text-4xl !font-bold !text-center !mb-12 !text-gray-900 dark:!text-white"
      >
        Featured Projects
      </Title>
      <Row gutter={[32, 32]} justify="center">
        {portfolioData.projects.map((project) => (
          <Col key={project.key} xs={24} md={12} lg={20}>
            <Card
              className="shadow-2xl dark:border-gray-700 transition-all duration-300 mb-8 hover:shadow-blue-500/50 hover:scale-[1.01] rounded-xl"
              style={{
                backgroundColor: "var(--ant-bg-container)",
              }}
            >
              {/* Flex container for title + button */}
              <div className="flex justify-between items-center mb-4">
                <Text
                  style={{
                    color: "#fff",
                    fontWeight: "700",
                    fontSize: "1.2rem",
                  }}
                >
                  {project.title}
                </Text>
                <Button
                  type="primary"
                  href={project.link}
                  target="_blank"
                  className="ml-4"
                  style={{
                    color: "white",
                    fontWeight: "700",
                  }}
                >
                  Source Code
                </Button>
              </div>

              <Space size={[4, 8]} wrap className="mt-2 mb-4">
                {project.technologies.map((tech) => (
                  <Tag
                    key={tech}
                    className=" !text-blue-600 dark:!text-blue-300 rounded"
                    style={{
                      background: "var(--ant-tag-bg)",
                    }}
                  >
                    {tech}
                  </Tag>
                ))}
              </Space>

              <Paragraph className="!text-base !text-gray-600 dark:!text-gray-300 mt-4">
                {project.description}
              </Paragraph>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
  </div>
);

const ContactSection = ({ onDownloadClick }) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);

  // Simulates sending an email (requires a backend API in a real app)
  const onFinish = async (values) => {
    try {
      console.log(values);
      setLoading(true);
      const response = await axios.post(
        `http://localhost:3000/api/contact`, // works with Vite
        values
      );
      setLoading(false);
      onDownloadClick("Form submitted"); // Show the alert on successful submission
      console.log("Response:", response.data);

      form.resetFields(); // optional — clears the form
    } catch (error) {
      console.error("Submission failed:", error);
      message.error("Something went wrong while submitting!");
    }
  };

  return (
    <div
      id="Contact"
      className="p-6 md:p-12 lg:p-20 bg-gray-50 dark:bg-gray-900 transition-colors duration-300"
    >
      <div className="max-w-4xl mx-auto text-center">
        {/* Updated Heading for Dark Mode */}
        <Title
          level={2}
          className="!text-4xl !font-bold !mb-4 !text-gray-900 dark:!text-white"
        >
          Let&apos;s Connect
        </Title>
        <Paragraph className="!text-xl !mb-8 !text-gray-600 dark:!text-gray-300">
          I’m always open to discussing new projects or opportunities. Send a
          message below.
        </Paragraph>

        <Row gutter={[32, 32]}>
          <Col xs={24} lg={25}>
            {/* Contact Form */}
            <Card
              className="rounded-xl shadow-2xl dark:border-gray-700"
              style={{
                backgroundColor: "var(--ant-bg-container)",
              }}
              title={
                <div className="!text-lg font-semibold !text-blue-600 dark:!text-blue-400">
                  Send Me a Message
                </div>
              }
            >
              <Form form={form} layout="vertical" onFinish={onFinish}>
                <Form.Item
                  name="name"
                  rules={[
                    { required: true, message: "Please enter your name" },
                  ]}
                >
                  <Input
                    placeholder="Your Name"
                    className="rounded-lg h-10 dark:!border-gray-60"
                    style={{
                      color: "#1338BE",
                      fontWeight: "600",
                      backgroundColor: "#fff",
                    }}
                  />
                </Form.Item>
                <Form.Item
                  name="email"
                  rules={[
                    {
                      required: true,
                      type: "email",
                      message: "Please enter a valid email",
                    },
                  ]}
                >
                  <Input
                    placeholder="Your Email"
                    className="rounded-lg h-10 dark:!border-gray-600"
                    style={{
                      color: "#1338BE",
                      fontWeight: "600",
                      backgroundColor: "#fff",
                    }}
                  />
                </Form.Item>
                <Form.Item
                  name="message"
                  rules={[
                    { required: true, message: "Please write your message" },
                  ]}
                >
                  <Input.TextArea
                    rows={4}
                    placeholder="Your Message"
                    className="rounded-lg dark:!border-gray-600"
                    style={{
                      color: "#1338BE",
                      fontWeight: "600",
                      backgroundColor: "#fff",
                    }}
                  />
                </Form.Item>
                <Form.Item>
                  <Button
                    type="primary"
                    htmlType="submit"
                    loading={loading}
                    block
                    size="large"
                    className="bg-blue-600 hover:!bg-blue-700 !border-none rounded-lg shadow-md transition-all duration-300"
                  >
                    {loading ? "Sending..." : "Send Message"}
                  </Button>
                </Form.Item>
              </Form>
            </Card>
          </Col>

          <Col xs={24} lg={25}>
            {/* Contact Details */}
            <Card
              className="rounded-xl shadow-lg dark:border-gray-700"
              style={{
                backgroundColor: "var(--ant-bg-container)",
              }}
              title={
                <div className="!text-lg font-semibold !text-blue-600 dark:!text-blue-400">
                  Direct Contact
                </div>
              }
            >
              <Paragraph className="!text-base !font-medium !text-gray-600 dark:!text-gray-300 mb-1">
                Email:
              </Paragraph>
              <Text copyable className="!text-xl !font-mono dark:!text-white">
                {portfolioData.contact.email}
              </Text>

              <Paragraph className="!text-base !font-medium !text-gray-600 dark:!text-gray-300 mt-4 mb-1">
                Socials:
              </Paragraph>
              <Space size="large">
                <a
                  href={`https://${portfolioData.contact.github}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="!text-gray-900 dark:!text-white text-3xl hover:!text-blue-600 dark:hover:!text-blue-400 transition-colors duration-200"
                  aria-label="GitHub Profile"
                >
                  <FaGithub size={28} />
                </a>
                <a
                  href={`https://${portfolioData.contact.linkedin}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="!text-blue-700 dark:!text-blue-500 text-3xl hover:!text-blue-900 dark:hover:!text-blue-300 transition-colors duration-200"
                  aria-label="LinkedIn Profile"
                >
                  <FaLinkedin size={28} />
                </a>
              </Space>
            </Card>
          </Col>
        </Row>
      </div>
    </div>
  );
};

// --- Main App Component ---

const PortfolioApp = () => {
  const [current, setCurrent] = useState("Home");
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [showAlert, setShowAlert] = useState(false); // State to control the Alert visibility
  const [drawerVisible, setDrawerVisible] = useState(false);
  const [alertMessage, setAlertMessage] = useState("Resume getting Downloaded"); // State to hold the alert message

  // CORRECTED: Define the handler inside PortfolioApp where setShowAlert is available
  const handleShowingAlert = useCallback((message) => {
    setShowAlert(true);
    setAlertMessage(message);
  }, []);

  // Function to smoothly scroll to a section
  const scrollToSection = useCallback((key) => {
    setCurrent(key);
    const element = document.getElementById(key);
    if (element) {
      element.scrollIntoView({ behavior: "smooth" });
    }
  }, []);

  // Items for the Menu component
  const items = [
    { key: "Home", label: "Home" },
    { key: "About", label: "About" },
    { key: "Experience", label: "Experience" }, // Added Experience
    { key: "Education", label: "Education" },
    { key: "Achievements", label: "Achievements" },
    { key: "Projects", label: "Projects" },
    { key: "Contact", label: "Contact" },
  ];

  // Effect to handle intersection observer for dynamic menu highlighting
  useEffect(() => {
    const observerOptions = {
      root: null,
      rootMargin: "-50% 0px -50% 0px", // Center-of-viewport threshold
      threshold: 0,
    };

    const handleIntersect = (entries) => {
      entries.forEach((entry) => {
        // If the element is centered (i.e., intersecting within the rootMargin)
        if (entry.isIntersecting) {
          setCurrent(entry.target.id);
        }
      });
    };

    const observer = new IntersectionObserver(handleIntersect, observerOptions);

    // Updated list of sections to observe
    [
      "Home",
      "About",
      "Experience",
      "Education",
      "Achievements",
      "Projects",
      "Contact",
    ].forEach((id) => {
      const element = document.getElementById(id);
      if (element) observer.observe(element);
    });

    return () => observer.disconnect();
  }, []);

  // Theme Toggler
  const toggleTheme = () => {
    setIsDarkMode((prev) => {
      const newState = !prev;
      document.documentElement.classList.toggle("dark", newState);
      return newState;
    });
  };

  return (
    <div className="dark">
      {/* Custom CSS for the Typewriter Cursor Blinking Effect */}
      <style>{`
        /* Define the cursor animation keyframes */
        @keyframes cursor-blink {
          0%, 100% { opacity: 1; }
          50% { opacity: 0; }
        }

        /* Apply the animation using Tailwind's 'animate-cursor-blink' utility */
        .animate-cursor-blink {
          animation: cursor-blink 0.7s infinite step-end;
        }

        /* Fix Ant Design Menu item color in dark mode */
        .ant-menu-horizontal:not(.ant-menu-dark) > .ant-menu-item-selected {
          border-bottom-color: #3b82f6 !important; /* Tailwind blue-500 */
          color: #3b82f6 !important;
        }
        
        .dark .ant-menu-horizontal:not(.ant-menu-dark) > .ant-menu-item-selected {
          color: #60a5fa !important; /* Tailwind blue-400 */
          border-bottom-color: #60a5fa !important;
        }

        .dark .ant-menu-horizontal > .ant-menu-item:not(.ant-menu-item-selected) {
          color: #d1d5db !important; /* Tailwind gray-300 */
        }
        .dark .ant-menu-horizontal > .ant-menu-item:hover {
          color: #60a5fa !important; /* Tailwind blue-400 */
        }
      `}</style>

      <Layout className="min-h-screen font-inter">
        {/* Sticky Header with Affix */}
        <Affix offsetTop={0}>
          <Header className="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 shadow-md transition-colors duration-300 px-4 sm:px-8 lg:px-12 h-auto flex justify-between items-center">
            {/* Logo or Brand */}
            <div className="text-xl font-bold text-gray-900 dark:text-white">
              Debshankar Dey
            </div>

            {/* Desktop Menu */}
            <div className="hidden lg:flex">
              <Menu
                mode="horizontal"
                selectedKeys={[current]}
                onClick={(e) => scrollToSection(e.key)}
                items={items}
                className="!bg-transparent dark:!bg-transparent !border-none !text-lg"
                overflowedIndicator={<span className="text-white">⋯</span>}
              />
            </div>

            {/* Mobile Hamburger Button */}
            <div className="flex items-center md:hidden">
              <Button
                type="text"
                icon={
                  drawerVisible ? (
                    <CloseOutlined
                      style={{
                        fontSize: "22px",
                        color: "#fff",
                      }}
                    />
                  ) : (
                    <MenuOutlined
                      style={{
                        fontSize: "22px",
                        color: "#fff",
                      }}
                    />
                  )
                }
                onClick={() => setDrawerVisible(!drawerVisible)}
              />
            </div>

            {/* Drawer Menu for Mobile */}
            <Drawer
              title="Menu"
              placement="right"
              onClose={() => setDrawerVisible(false)}
              open={drawerVisible}
              styles={{
                body: {
                  padding: 0,
                  backgroundColor: "#ffffff",
                },
              }}
              className="dark:bg-gray-900"
            >
              <Menu
                mode="inline"
                selectedKeys={[current]}
                onClick={(e) => {
                  scrollToSection(e.key);
                  setDrawerVisible(false);
                }}
                items={items}
                styles={{ color: "#fff" }}
                className="!bg-transparent dark:!bg-transparent !border-none !text-lg"
              />
            </Drawer>
          </Header>
        </Affix>

        {/* Alert shown after click */}
        {showAlert && (
          <div className="flex p-2 bg-gray-900 border-b">
            <Alert
              message={alertMessage}
              type="success"
              showIcon
              closable
              onClose={() => setShowAlert(false)}
              className="w-full" // Added max-width for better centering on large screens
            />
          </div>
        )}

        {/* Content Area */}
        <Content className="p-0">
          <section>
            {/* MODIFIED: Pass the handler to HeroSection */}
            <HeroSection
              scrollToSection={scrollToSection}
              onDownloadClick={handleShowingAlert}
            />
          </section>

          <section>
            <AboutSection />
          </section>

          <section>
            <ExperienceSection />
          </section>

          <section>
            <EducationSection />
          </section>

          <section>
            <AchievementsSection />
          </section>

          <section>
            <ProjectsSection />
          </section>

          <section>
            <ContactSection onDownloadClick={handleShowingAlert} />
          </section>
        </Content>

        {/* Footer */}
        <Footer className="text-center bg-white dark:bg-gray-950 dark:!text-gray-400 transition-colors duration-300 p-6">
          <Paragraph className="!text-sm !text-gray-600 dark:!text-gray-400">
            &copy; {new Date().getFullYear()} {portfolioData.name}. Built with
            React and Ant Design.
          </Paragraph>
          <div className="mt-2">
            <Space size="middle">
              <a
                href={`https://${portfolioData.contact.linkedin}`}
                target="_blank"
                rel="noopener noreferrer"
                className="!text-blue-600 hover:!text-blue-800 dark:!text-blue-400 dark:hover:!text-blue-200 text-2xl"
                aria-label="LinkedIn"
              >
                <FaLinkedin />
              </a>
              <a
                href={`https://${portfolioData.contact.github}`}
                target="_blank"
                rel="noopener noreferrer"
                className="!text-gray-700 hover:!text-gray-900 dark:!text-gray-400 dark:hover:!text-white text-2xl"
                aria-label="GitHub"
              >
                <FaGithub />
              </a>
            </Space>
          </div>
        </Footer>
      </Layout>
    </div>
  );
};

export default PortfolioApp;
